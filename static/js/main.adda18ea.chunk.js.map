{"version":3,"sources":["components/square/square.js","components/board/board.js","components/gameControls/gameControls.js","utils/checkWinner.js","components/game/game.js","index.js"],"names":["Square","props","react_default","a","createElement","className","onClick","value","Board","row","_this","this","squares","_this2","map","generateRow","React","Component","gameControls","disabled","disabledControls","changeOnClick","undoOnClick","clearOnClick","checkWinner","lines","i","length","_lines$i","Object","slicedToArray","b","c","document","querySelectorAll","classList","add","concat","filter","item","Game","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","Array","fill","lastMove","turn","toConsumableArray","push","setState","changeTurn","console","log","newSquares","pop","unsetClasses","forEach","el","remove","winner","status","board_Board","makeMove","gameControls_gameControls","undoMove","clearField","ReactDOM","render","game_Game","getElementById"],"mappings":"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","file":"static/js/main.adda18ea.chunk.js","sourcesContent":["import React from 'react';\r\nimport './square.css';\r\n\r\nexport default function Square(props) {\r\n    return (\r\n      <button className=\"square\" onClick={props.onClick}>\r\n        {props.value}\r\n      </button>\r\n    );\r\n  }","import React from 'react';\r\nimport Square from '../square/square';\r\nimport './board.css';\r\n\r\nexport default class Board extends React.Component {\r\n  generateRow(row) {\r\n    return (\r\n      <div className=\"board-row\">\r\n        {<Square value={this.props.squares[row[0]]} onClick={() => this.props.onClick(row[0])} />}\r\n        {<Square value={this.props.squares[row[1]]} onClick={() => this.props.onClick(row[1])} />}\r\n        {<Square value={this.props.squares[row[2]]} onClick={() => this.props.onClick(row[2])} />}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"gameBoard\">\r\n        {[[0, 1, 2], [3, 4, 5], [6, 7, 8]].map(row => this.generateRow(row))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './gameControls.css';\r\n\r\nexport default function gameControls(props) {\r\n\treturn (\r\n\t\t<div className=\"gameControls\">\r\n\t\t\t\t<button disabled={props.disabledControls} onClick={props.changeOnClick}>Change first player</button>\r\n\t\t\t\t<button onClick={props.undoOnClick}>Undo</button>\r\n\t\t\t\t<button onClick={props.clearOnClick}>Clear</button>\r\n\t\t</div>\r\n\t);\r\n}\r\n","export default function checkWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      document.querySelectorAll('.square')[a].classList.add('gameOver');\r\n      document.querySelectorAll('.square')[b].classList.add('gameOver');\r\n      document.querySelectorAll('.square')[c].classList.add('gameOver');\r\n      return `${squares[a]} is win!`;\r\n    }\r\n  }\r\n\r\n  if (squares.filter(item => item).length === 9) {\r\n    return 'draw.';\r\n}\r\n  return false;\r\n}\r\n","import React from 'react';\r\nimport Board from '../board/board';\r\nimport GameControls from '../gameControls/gameControls';\r\nimport checkWinner from '../../utils/checkWinner';\r\nimport './game.css';\r\n\r\nexport default class Game extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            squares: Array(9).fill(),\r\n            lastMove: [],\r\n            turn: 'X'\r\n        };\r\n    }\r\n\r\n    makeMove(i) {\r\n        const squares = [...this.state.squares];\r\n        if (!(squares[i] || checkWinner(squares))) {\r\n            squares[i] = this.state.turn;\r\n            const lastMove = [...this.state.lastMove];\r\n            lastMove.push(i);\r\n            this.setState({squares: squares, \r\n                            lastMove: lastMove\r\n                        });\r\n            this.changeTurn();\r\n            console.log(squares.filter(i => i).length % 2 === 1);\r\n        }\r\n    }\r\n\r\n    changeTurn() {\r\n        this.setState({turn: (this.state.turn === 'X' && 'O') || 'X'});\r\n    }\r\n\r\n    undoMove() {\r\n        if (this.state.lastMove.length !== 0) {\r\n            this.changeTurn();\r\n        }\r\n        const newSquares = [...this.state.squares];\r\n        newSquares[this.state.lastMove.pop()] = null;\r\n        this.setState({squares: newSquares});\r\n        this.unsetClasses();\r\n    }\r\n\r\n    clearField() {\r\n        this.setState({squares: Array(9).fill(),\r\n                        lastMove: [],\r\n                        turn: 'X'\r\n        });\r\n        this.unsetClasses();\r\n    }\r\n\r\n    unsetClasses() {\r\n        document.querySelectorAll('.gameOver').forEach(el => el.classList.remove('gameOver'));\r\n    }\r\n\r\n    render() {\r\n        const winner = checkWinner(this.state.squares);\r\n        const status = (winner && <p>Result of game - <span className=\"gameOver\">{winner}</span></p>) \r\n                        || <p>Next move - {this.state.turn}</p>;\r\n\r\n      return (\r\n        <div className=\"game\">\r\n            <div className=\"gameStatus\">{status}</div>\r\n            <Board squares={this.state.squares} onClick={(i) => this.makeMove(i)} />\r\n            <GameControls disabledControls={this.state.lastMove.length !== 0} \r\n                            changeOnClick={() => this.changeTurn()} \r\n                            undoOnClick={() => this.undoMove()} \r\n                            clearOnClick={() => this.clearField()} />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Game from './components/game/game';\nimport './index.css';\n\n  ReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n  );\n  "],"sourceRoot":""}