{"version":3,"sources":["components/board/square/square.js","components/board/board.js","components/gameControls/gameControls.js","components/status/status.js","utils/aiEasy.js","utils/checkWinner.js","components/game/game.js","index.js"],"names":["square_square","props","react_default","a","createElement","className","onClick","value","board_board","squares","map","sq","i","key","gameControls_gameControls","disabled","disabledControls","changeOnClick","undoOnClick","clearOnClick","status_status","status","gameOver","turn","getAvailSquares","arr","val","undefined","filter","checkWinner","lines","length","_lines$i","Object","slicedToArray","b","c","document","querySelectorAll","classList","add","concat","item","Game","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","Array","fill","lastMove","aiMove","aiMark","toConsumableArray","push","console","log","availSquares","randomIndex","Math","floor","random","aiEasy","changeTurn","setState","querySelector","checked","oldTurn","oldAIMark","newSquares","pop","unsetClasses","forEach","el","remove","_this2","winner","isGameStarted","makeMove","undoMove","clearField","type","id","onChange","initAI","React","Component","ReactDOM","render","game_Game","getElementById"],"mappings":"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","file":"static/js/main.3f3372e8.chunk.js","sourcesContent":["import React from 'react';\r\nimport './square.css';\r\n\r\nexport default (props) => {\r\n    return (\r\n      <button className=\"square\" onClick={props.onClick}>\r\n        {props.value}\r\n      </button>\r\n    );\r\n  }","import React from 'react';\r\nimport Square from './square/square';\r\nimport './board.css';\r\n\r\nexport default (props) => {\r\n  return (\r\n    <div className=\"gameBoard\">\r\n      {props.squares.map((sq, i) => <Square key={i} value={sq} onClick={() => props.onClick(i)} />)}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport './gameControls.css';\r\n\r\nexport default (props) => {\r\n\treturn (\r\n\t\t<div className=\"gameControls\">\r\n\t\t\t\t<button disabled={props.disabledControls} onClick={props.changeOnClick}>Change first player</button>\r\n\t\t\t\t<button disabled={!props.disabledControls} onClick={props.undoOnClick}>Undo</button>\r\n\t\t\t\t<button disabled={!props.disabledControls} onClick={props.clearOnClick}>Clear</button>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React from 'react';\r\n\r\nexport default (props) => {\r\n    const status = (props.gameOver && <p>Result of game - <span className=\"gameOver\">{props.gameOver}</span></p>) \r\n                        || <p>Next move - {props.turn}</p>;\r\n    return (\r\n        <div className=\"gameStatus\">{status}</div>\r\n    )\r\n}","const getAvailSquares = (arr) => arr.map((val, i) => (val === undefined || val ===  null) ? i : null).filter(val => val !== null);\r\n\r\nexport function aiEasy(arr) {\r\n    console.log('arr');\r\n    console.log(arr);\r\n    const availSquares = getAvailSquares(arr);\r\n    console.log('availSquares');\r\n    console.log(availSquares);\r\n    const randomIndex = Math.floor(availSquares.length * Math.random());\r\n    console.log('randomIndex');\r\n    console.log(randomIndex);\r\n    return availSquares[randomIndex];\r\n}\r\n","export default function checkWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      document.querySelectorAll('.square')[a].classList.add('gameOver');\r\n      document.querySelectorAll('.square')[b].classList.add('gameOver');\r\n      document.querySelectorAll('.square')[c].classList.add('gameOver');\r\n      return `${squares[a]} is win!`;\r\n    }\r\n  }\r\n\r\n  if (squares.filter(item => item).length === 9) {\r\n    return 'draw.';\r\n}\r\n  return false;\r\n}\r\n","import React from 'react';\r\n\r\nimport Board from '../board/board';\r\nimport GameControls from '../gameControls/gameControls';\r\nimport Status from '../status/status';\r\nimport { aiEasy } from '../../utils/aiEasy';\r\nimport checkWinner from '../../utils/checkWinner';\r\nimport './game.css';\r\n\r\nexport default class Game extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            squares: Array(9).fill(),\r\n            lastMove: [],\r\n            turn: 'X',\r\n            aiMove: false,\r\n            aiMark: 'O'\r\n        };\r\n    }\r\n\r\n    makeMove(i) {\r\n        const squares = [...this.state.squares];\r\n        if (!(squares[i] || checkWinner(squares))) {\r\n            squares[i] = this.state.turn;\r\n            const lastMove = [...this.state.lastMove];\r\n            lastMove.push(i);\r\n            console.log('pushed ' + i);\r\n            console.log(lastMove)\r\n            if (this.state.aiMove && this.state.aiMark !== this.state.turn && !checkWinner(squares)) {\r\n                const aiMove = aiEasy(squares);\r\n                squares[aiMove] = this.state.aiMark;\r\n                lastMove.push(aiMove);\r\n                console.log('pushed ' + aiMove);\r\n                console.log(lastMove)\r\n                } else {\r\n                this.changeTurn();\r\n            }\r\n            this.setState({squares: squares, \r\n                lastMove: lastMove\r\n            });\r\n        }\r\n    }\r\n\r\n    initAI() {\r\n        this.setState({aiMove: document.querySelector('#easyComp').checked});\r\n    }\r\n\r\n    changeTurn() {\r\n        const oldTurn = this.state.turn;\r\n        const oldAIMark = this.state.aiMark;\r\n        this.setState({turn: oldAIMark, aiMark: oldTurn});\r\n    }\r\n\r\n    undoMove() {\r\n        const newSquares = [...this.state.squares];\r\n        if (this.state.aiMove) {\r\n            newSquares[this.state.lastMove.pop()] = null;\r\n            newSquares[this.state.lastMove.pop()] = null;\r\n        } else {\r\n            newSquares[this.state.lastMove.pop()] = null;\r\n            this.changeTurn();\r\n        }\r\n        this.setState({squares: newSquares});\r\n        this.unsetClasses();\r\n    }\r\n\r\n    clearField() {\r\n        this.setState({squares: Array(9).fill(),\r\n                        lastMove: []\r\n        });\r\n        this.unsetClasses();\r\n    }\r\n\r\n    unsetClasses() {\r\n        document.querySelectorAll('.gameOver').forEach(el => el.classList.remove('gameOver'));\r\n    }\r\n\r\n    render() {\r\n        const winner = checkWinner(this.state.squares);\r\n        const isGameStarted = this.state.lastMove.length !== 0;\r\n\r\n      return (\r\n        <div className=\"game\">\r\n            <Status gameOver={winner} turn={this.state.turn} />\r\n            <Board squares={this.state.squares} onClick={(i) => this.makeMove(i)} />\r\n            <GameControls disabledControls={isGameStarted} \r\n                            changeOnClick={() => this.changeTurn()} \r\n                            undoOnClick={() => this.undoMove()} \r\n                            clearOnClick={() => this.clearField()} />\r\n            <label>\r\n                <input type=\"checkbox\" id=\"easyComp\" disabled={isGameStarted} onChange={() => this.initAI()} />\r\n            easy AI\r\n            </label>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Game from './components/game/game';\nimport './index.css';\n\n  ReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n  );\n  "],"sourceRoot":""}