{"version":3,"sources":["components/board/square/square.js","components/board/board.js","components/gameControls/gameControls.js","components/enemies/enemeis.js","components/status/status.js","utils/ai.js","utils/checkWinner.js","components/game/game.js","index.js"],"names":["square_square","props","react_default","a","createElement","className","onClick","value","board_board","squares","map","sq","i","key","gameControls_gameControls","disabled","disabledControls","changeOnClick","undoOnClick","clearOnClick","enemeis","type","id","name","defaultChecked","onChange","status_status","status","gameOver","turn","getAvailSquares","arr","val","undefined","filter","aiFirst","availSquares","Math","floor","length","random","checkRow","mark","result","targArr","el","_targObj","blankSq","Object","defineProperty","push","checkColumn","_targObj2","checkDiogonal","_targObj3","_targObj5","checkWinner","lines","_lines$i","slicedToArray","b","c","document","querySelectorAll","classList","add","concat","item","Game","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","Array","fill","lastMove","gameInProgress","aiMove","aiMark","toConsumableArray","AITurn","changeTurn","setState","Boolean","choosen","querySelector","gameMode","plMark","winForAI","winForPL","filteredBestMove","sort","move","aiSecond","oldTurn","oldAIMark","newSquares","pop","unsetClasses","forEach","remove","_this2","winner","makeMove","undoMove","clearField","initAI","React","Component","ReactDOM","render","game_Game","getElementById"],"mappings":"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","file":"static/js/main.3e1f2f1e.chunk.js","sourcesContent":["import React from 'react';\r\nimport './square.css';\r\n\r\nexport default (props) => {\r\n    return (\r\n      <button className=\"square\" onClick={props.onClick}>\r\n        {props.value}\r\n      </button>\r\n    );\r\n  }","import React from 'react';\r\nimport Square from './square/square';\r\nimport './board.css';\r\n\r\nexport default (props) => {\r\n  return (\r\n    <div className=\"gameBoard\">\r\n      {props.squares.map((sq, i) => <Square key={i} value={sq} onClick={() => props.onClick(i)} />)}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport './gameControls.css';\r\n\r\nexport default (props) => {\r\n\treturn (\r\n\t\t<div className=\"gameControls\">\r\n\t\t\t\t<button disabled={props.disabledControls} onClick={props.changeOnClick}>Change first player</button>\r\n\t\t\t\t<button disabled={!props.disabledControls} onClick={props.undoOnClick}>Undo</button>\r\n\t\t\t\t<button onClick={props.clearOnClick}>\r\n\t\t\t\t\t{(props.disabledControls && 'Clear') || 'New game'}\r\n\t\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React from 'react';\r\n\r\nexport default (props) => {\r\n    return (\r\n        <div className=\"enemies\">\r\n            <label>\r\n                <input type=\"radio\" id=\"human\" name=\"gameMode\" defaultChecked disabled={props.disabled} onChange={props.onChange} />\r\n                human\r\n            </label>\r\n            <label>\r\n                <input type=\"radio\" id=\"aiFirst\" name=\"gameMode\" disabled={props.disabled} onChange={props.onChange} />\r\n                aiFirst\r\n            </label>\r\n            <label>\r\n                <input type=\"radio\" id=\"aiSecond\" name=\"gameMode\" disabled={props.disabled} onChange={props.onChange} />\r\n                aiSecond\r\n            </label>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport default (props) => {\r\n    const status = (props.gameOver && <p>Result of game - <span className=\"gameOver\">{props.gameOver}</span></p>) \r\n                        || <p>Next move - {props.turn}</p>;\r\n    return (\r\n        <div className=\"gameStatus\">{status}</div>\r\n    )\r\n}","const getAvailSquares = (arr) => arr.map((val, i) => (val === undefined || val ===  null) ? i : null).filter(val => val !== null);\r\n\r\nexport function aiFirst(arr) {\r\n    const availSquares = getAvailSquares(arr);\r\n    const randomIndex = Math.floor(availSquares.length * Math.random());\r\n    return availSquares[randomIndex];\r\n}\r\n\r\nexport function aiSecond(arr, aiMark) {\r\n    const plMark = (aiMark === 'X' ? 'O' : 'X');\r\n    const winForAI = checkRow(arr, aiMark).concat(checkColumn(arr, aiMark), checkDiogonal(arr, aiMark));\r\n    const winForPL = checkRow(arr, plMark).concat(checkColumn(arr, plMark), checkDiogonal(arr, plMark));\r\n    const bestMoves = winForAI.sort((a,b) => Math.random()).concat(winForPL.sort((a,b) => Math.random()));\r\n    const filteredBestMove = bestMoves.filter(move => arr[move] !== aiMark && arr[move] !== plMark);\r\n    if (filteredBestMove.length !== 0) {\r\n        return filteredBestMove[0];\r\n    } else {\r\n        return aiFirst(arr);\r\n    }\r\n}\r\n\r\nconst checkRow = (arr, mark) => {\r\n    const result = [];\r\n    const targArr = arr.map(el => el !== mark ? 0 : 1);\r\n\r\n    for (let i = 1; i < 9; i +=3) {\r\n        if ((targArr[i-1] + targArr[i] + targArr[i+1]) === 2) {\r\n            const targObj = {[targArr[i-1]]: i-1, [targArr[i]]: i, [targArr[i+1]]: i+1};\r\n            let blankSq = targObj[0];\r\n            result.push(blankSq);\r\n        }\r\n    }\r\n    return result;\r\n};\r\n\r\nconst checkColumn = (arr, mark) => {\r\n    const result = [];\r\n    const targArr = arr.map(el => el !== mark ? 0 : 1);\r\n    for (let i = 0; i < 3; i++) {\r\n        if ((targArr[i] + targArr[i+3] + targArr[i+6]) === 2) {\r\n            const targObj = {[targArr[i]]: i, [targArr[i+3]]: i+3, [targArr[i+6]]: i+6};\r\n            let blankSq = targObj[0];\r\n            result.push(blankSq);\r\n        }\r\n    }\r\n    return result;\r\n};\r\n\r\nconst checkDiogonal = (arr, mark) => {\r\n    const result = [];\r\n    const targArr = arr.map(el => el !== mark ? 0 : 1);\r\n    if ((targArr[0] + targArr[4] + targArr[8]) === 2) {\r\n        const targObj = {[targArr[0]]: 0, [targArr[4]]: 4, [targArr[8]]: 8};\r\n        let blankSq = targObj[0];\r\n        result.push(blankSq);\r\n    }\r\n    if ((targArr[2] + targArr[4] + targArr[6]) === 2) {\r\n        const targObj = {[targArr[2]]: 2, [targArr[4]]: 4, [targArr[6]]: 6};\r\n        let blankSq = targObj[0];\r\n        result.push(blankSq);\r\n    }\r\n    return result;\r\n};\r\n\r\n","export default function checkWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      document.querySelectorAll('.square')[a].classList.add('gameOver');\r\n      document.querySelectorAll('.square')[b].classList.add('gameOver');\r\n      document.querySelectorAll('.square')[c].classList.add('gameOver');\r\n      return `${squares[a]} is win!`;\r\n    }\r\n  }\r\n\r\n  if (squares.filter(item => item).length === 9) {\r\n    return 'draw.';\r\n}\r\n  return false;\r\n}\r\n","import React from 'react';\r\n\r\nimport Board from '../board/board';\r\nimport GameControls from '../gameControls/gameControls';\r\nimport Enemies from '../enemies/enemeis';\r\nimport Status from '../status/status';\r\nimport { aiFirst, aiSecond } from '../../utils/ai';\r\nimport checkWinner from '../../utils/checkWinner';\r\nimport './game.css';\r\n\r\nexport default class Game extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            squares: Array(9).fill(),\r\n            lastMove: [],\r\n            gameInProgress: false,\r\n            turn: 'X',\r\n            aiMove: false,\r\n            aiMark: 'O'\r\n        };\r\n    }\r\n\r\n    makeMove(i) {\r\n        const squares = [...this.state.squares];\r\n        if (!(squares[i] || checkWinner(squares))) {\r\n            squares[i] = this.state.turn;\r\n            const lastMove = [...this.state.lastMove];\r\n            lastMove.push(i);\r\n            if (this.state.aiMove && this.state.aiMark !== this.state.turn && !checkWinner(squares)) {\r\n                const aiMove = this.AITurn(squares);\r\n                squares[aiMove] = this.state.aiMark;\r\n                lastMove.push(aiMove);\r\n                } else {\r\n                this.changeTurn();\r\n            }\r\n            this.setState({squares: squares, \r\n                lastMove: lastMove,\r\n                gameInProgress: (!Boolean(checkWinner(squares)))\r\n            });\r\n        }\r\n    }\r\n\r\n    initAI() {\r\n        const choosen = document.querySelector('input[name=gameMode]:checked');\r\n        this.setState({aiMove: !(choosen.id === 'human'), \r\n                        gameMode: choosen.id});\r\n    }\r\n\r\n    AITurn(squares) {\r\n        switch (this.state.gameMode) {\r\n            case 'aiFirst':\r\n                return aiFirst(squares);                \r\n            case 'aiSecond':\r\n                return aiSecond(squares, this.state.aiMark);\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    changeTurn() {\r\n        const oldTurn = this.state.turn;\r\n        const oldAIMark = this.state.aiMark;\r\n        this.setState({turn: oldAIMark, aiMark: oldTurn});\r\n    }\r\n\r\n    undoMove() {\r\n        const newSquares = [...this.state.squares];\r\n        if (this.state.aiMove) {\r\n            newSquares[this.state.lastMove.pop()] = null;\r\n            newSquares[this.state.lastMove.pop()] = null;\r\n        } else {\r\n            newSquares[this.state.lastMove.pop()] = null;\r\n            this.changeTurn();\r\n        }\r\n        this.setState({squares: newSquares});\r\n        this.unsetClasses();\r\n    }\r\n\r\n    clearField() {\r\n        this.setState({squares: Array(9).fill(),\r\n                        lastMove: []\r\n        });\r\n        this.unsetClasses();\r\n    }\r\n\r\n    unsetClasses() {\r\n        document.querySelectorAll('.gameOver').forEach(el => el.classList.remove('gameOver'));\r\n    }\r\n\r\n    render() {\r\n        const winner = checkWinner(this.state.squares);\r\n\r\n      return (\r\n        <div className=\"game\">\r\n            <Status gameOver={winner} turn={this.state.turn} />\r\n            <Board squares={this.state.squares} onClick={(i) => this.makeMove(i)} />\r\n            <GameControls disabledControls={this.state.gameInProgress}\r\n                            changeOnClick={() => this.changeTurn()}\r\n                            undoOnClick={() => this.undoMove()} \r\n                            clearOnClick={() => this.clearField()} />\r\n            <Enemies disabled={this.state.gameInProgress} onChange={() => this.initAI()} />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Game from './components/game/game';\nimport './index.css';\n\n  ReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n  );\n  "],"sourceRoot":""}